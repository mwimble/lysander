<launch>
	<arg name="do_hector_mapping" default="true" />
	<arg name="do_rplidar" default="true" />
	<arg name="do_motor_controller" default="true" />

	<!-- TF for position of LIDAR in robot -->
	<node pkg="tf" type="static_transform_publisher" name="tf_base_link_to_laser_frame" args="-0.178 0 0.15 0 0 0 1 base_link laser_frame 100" />

	<node unless="$(arg do_hector_mapping)" pkg="tf" type="static_transform_publisher" name="tf_base_stabilized_to_base_link" args="0 0 0.15 0 0 0 1 base_stabilized base_link 100" />

	<!--node pkg="tf" type="static_transform_publisher" name="tf_base_link_to_camera_link" args="0.0075 0 0.15 0 0 0 1 base_link camera_link 100" /-->

	<node pkg="tf" type="static_transform_publisher" name="tf_base_footprint_to_base_stabilized" args="0.00 0 -0.063 0 0 0 base_footprint base_stabilized 100" />

	<!-- Bring up motor controller -->
    <include if="$(arg do_motor_controller)" file="$(find motor_controller)/launch/motor.launch" >
        <arg name="do_odom_tf" value="false" />
    </include>

    <!-- Bring up RPLIDAR -->
	<node if="$(arg do_rplidar)" name="rplidarNode" pkg="rplidar_ros"  type="rplidarNode" output="screen">
		<param name="serial_port"         type="string" value="/dev/ttyUSB0" />  
		<param name="serial_baudrate"     type="int"    value="115200" />
		<param name="frame_id"            type="string" value="laser_frame" />
		<param name="inverted"            type="bool"   value="false" />
		<param name="angle_compensate"    type="bool"   value="true" />
	</node>

	<!-- Bring up hector_mapping -->
	<include if="$(arg do_hector_mapping)" file="$(find lysander)/launch/hector_mapping.launch" >
	</include>

</launch>

<!--
  <node pkg="tf" type="static_transform_publisher" name="map_nav_broadcaster" args="0 0 0 0 0 0 map nav 100"/>

  <arg name="do_amcl" default="false" />
  <arg name="do_map_server" default="false" />
  <arg name="do_move_base" default="false" />

  <node if="$(arg do_map_server)" name="map_server" pkg="map_server" type="map_server" args="$(find lysander)/params/map.yaml" output="screen" >
    <param name="frame_id" value="/odom" />
  </node>

  <node name="motor_controller_node" pkg="motor_controller"  type="motor_controller_node" output="screen" >
    <rosparam command="load" file="$(find motor_controller)/cfg/motor.yaml"/>
    <param name="do_odom_tf" value="false" />
  </node>

  <node pkg="amcl" if="$(arg do_amcl)" type="amcl" name="amcl" output="screen" launch-prefix="xterm -e gdb -args">
  <node if="$(arg do_amcl)" pkg="amcl" type="amcl" name="amcl" output="screen" >
    <remap from="scan" to="scan" />
    <param name="use_map_topic" value="false" />

    <param name="odom_model_type" value="diff"/>
    <param name="odom_alpha5" value="0.1"/>
    <param name="transform_tolerance" value="0.05" />
    <param name="gui_publish_rate" value="10.0"/>
    <param name="laser_max_beams" value="500"/>
    <param name="min_particles" value="500"/>
    <param name="max_particles" value="1000"/>
    <param name="kld_err" value="0.01"/>
    <param name="kld_z" value="0.99"/>
    <param name="odom_alpha1" value="0.8"/>
    <param name="odom_alpha2" value="0.8"/>
    <param name="odom_alpha3" value="0.2"/>
    <param name="odom_alpha4" value="0.2"/>
    <param name="laser_z_hit" value="0.95"/>
    <param name="laser_z_short" value="0.05"/>
    <param name="laser_z_max" value="0.05"/>
    <param name="laser_z_rand" value="0.05"/>
    <param name="laser_sigma_hit" value="0.2"/>
    <param name="laser_lambda_short" value="0.1"/>
    <param name="laser_model_type" value="likelihood_field"/> 
    <param name="laser_likelihood_max_dist" value="0.3"/>
    <param name="update_min_d" value="0.2"/>
    <param name="update_min_a" value="0.2"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="resample_interval" value="1"/>
    <param name="recovery_alpha_slow" value="0.0"/>
    <param name="recovery_alpha_fast" value="0.0"/>
  </node>

  <node if="$(arg do_move_base)" pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" >
lysander
    <remap from="cmd_vel" to="/cmd_vel_mux/input/teleop" />
    <rosparam file="$(find lysander)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find lysander)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find lysander)/params/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find lysander)/params/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find lysander)/params/base_local_planner_params.yaml" command="load" />
  </node>
-->
